name: Build GDExtension
on:
  workflow_call:
  push:
  pull_request:
  merge_group:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # A build is made for every possible combination of parameters
        # You can add or remove entries from the arrays of each parameter to customize which builds you want to run
        # See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
        target:
          [
            { platform: linux, arch: x86_64, os: ubuntu-22.04 },
            { platform: linux, arch: x86_32, os: ubuntu-22.04 },
            { platform: linux, arch: arm64, os: ubuntu-22.04-arm },
            { platform: linux, arch: arm32, os: ubuntu-22.04-arm },
            { platform: windows, arch: x86_64, os: windows-latest },
            { platform: windows, arch: x86_32, os: windows-latest },
            { platform: windows, arch: arm64, os: windows-latest },
            { platform: macos, arch: universal, os: macos-latest },
            { platform: android, arch: x86_64, os: ubuntu-22.04 },
            { platform: android, arch: x86_32, os: ubuntu-22.04 },
            { platform: android, arch: arm64, os: ubuntu-22.04 },
            { platform: android, arch: arm32, os: ubuntu-22.04 },
            { platform: ios, arch: arm64, os: macos-latest },
            { platform: web, arch: wasm32, os: ubuntu-22.04 },
          ]
        target-type: [template_debug, template_release]

    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v4

      - name: Clone godot-cpp Submodule Manually
        run: git clone https://github.com/godotengine/godot-cpp.git godot-cpp


      - name: Verify Action File (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: ls -la godot-cpp/.github/actions/setup-godot-cpp/
        
      - name: Verify Action File (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem -Path godot-cpp/.github/actions/setup-godot-cpp/ -Force

      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62
          windows-compiler: msvc


      # Add linux x86_32 toolchain
      - name: Install multilib support
        if: ${{ matrix.target.platform == 'linux' && matrix.target.arch == 'x86_32' }}
        run: |
          sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62

      # Build GDExtension (with caches)

      - name: Restore .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      - name: Build GDExtension Debug Build
        shell: sh
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }}

      - name: Save .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      # Clean up compilation files
      - name: Windows - Delete compilation files
        if: ${{ matrix.target.platform == 'windows' }}
        shell: pwsh
        run: |
          Remove-Item addons/pbi_json/bin/* -Include *.exp,*.lib,*.pdb -Force

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pbijson_cpp-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.target-type }}
          path: |
            ${{ github.workspace }}/addons/**

  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: pbijson_cpp
          pattern: pbijson_cpp-*
          delete-merged: true
